1、pthread_attr_init
功能：        对线程属性变量的初始化。
头文件：     <pthread.h>
函数原型：   int pthread_attr_init (pthread_attr_t* attr);
函数传入值：attr:线程属性。
函数返回值：成功： 0
                失败： -1
                
                
                
2、pthread_attr_setscope
功能：        设置线程 __scope 属性。scope属性表示线程间竞争CPU的范围，也就是说线程优先级的有效范围。POSIX的标准中定义了两个值：PTHREAD_SCOPE_SYSTEM和PTHREAD_SCOPE_PROCESS，前者表示与系统中所有线程一起竞争CPU时间，后者表示仅与同进程中的线程竞争CPU。默认为PTHREAD_SCOPE_PROCESS。目前LinuxThreads仅实现了PTHREAD_SCOPE_SYSTEM一值。
头文件：     <pthread.h>
函数原型：   int pthread_attr_setscope (pthread_attr_t* attr, int scope);
函数传入值：attr: 线程属性。
                      scope:PTHREAD_SCOPE_SYSTEM，表示与系统中所有线程一起竞争CPU时间，
                                 PTHREAD_SCOPE_PROCESS，表示仅与同进程中的线程竞争CPU
函数返回值得：同1。



3、pthread_attr_setdetachstate
功能：        设置线程detachstate属性。该表示新线程是否与进程中其他线程脱离同步，如果设置为PTHREAD_CREATE_DETACHED则新线程不能用pthread_join()来同步，且在退出时自行释放所占用的资源。缺省为PTHREAD_CREATE_JOINABLE状态。这个属性也可以在线程创建并运行以后用pthread_detach()来设置，而一旦设置为PTHREAD_CREATE_DETACH状态（不论是创建时设置还是运行时设置）则不能再恢复到PTHREAD_CREATE_JOINABLE状态。
头文件：      <phread.h>
函数原型：    int pthread_attr_setdetachstate (pthread_attr_t* attr, int detachstate);
函数传入值：attr:线程属性。
detachstate:PTHREAD_CREATE_DETACHED，不能用pthread_join()来同步，且在退出时自行释放所占用的资源
                    PTHREAD_CREATE_JOINABLE，能用pthread_join()来同步
函数返回值得：同1。


4、pthread_attr_setschedparam
功能：       设置线程schedparam属性，即调用的优先级。
头文件：     <pthread.h>
函数原型：   int pthread_attr_setschedparam (pthread_attr_t* attr, struct sched_param* param);
函数传入值：attr：线程属性。
                 param：线程优先级。一个struct sched_param结构，目前仅有一个sched_priority整型变量表示线程的运行优先级。这个参数仅当调度策略为实时（即SCHED_RR或SCHED_FIFO）时才有效，并可以在运行时通过pthread_setschedparam()函数来改变，缺省为0
函数返回值：同1。


5、pthread_attr_getschedparam
功能：       得到线程优先级。
头文件：    <pthread.h>
函数原型：  int pthread_attr_getschedparam (pthread_attr_t* attr, struct sched_param* param);
函数传入值：attr：线程属性；
                    param：线程优先级；
函数返回值：同1。


6  pthread_attr_setstacksize


7 pthread_mutexattr_setpshared
位于共享内存的线程锁