	在这里不管是服务端，还是客户端都将socket的类型设置为SOCK_STREAM，可以理解成tcp类型的socket。因为 SOCK_STREAM这种的特点是面向连接的，即每次收发数据之前必须通过connect建立连接，也是双向的，即任何一方都可以收发数据，协议本身提供了一些保障机制保证它是可靠的、有序的，即每个包按照发送的顺序到达接收方。 

在pthread_server.c中其socket建立过程，遵循一般的服务端的socket的连接过程。
过程如下：
　　1、创建一个socket，用函数socket()； 
　　2、设置socket属性，用函数setsockopt();
这一步可选。这里程序中将socket设置为 允许该socket可以“立即重用”；
　　3、绑定IP地址、端口等信息到socket上，用函数bind(); 
　　4、开启监听，用函数listen()； 
　　5、接收客户端上来的连接，用函数accept()； 
　　6、收发数据，用函数send()和recv()，或者read()和write(); 
　　7、关闭网络连接； 
　　8、关闭监听；
 
	在服务器端，通过监听客户端连接，将连接上客户端作为参数传递给子线程处理函数。在子线程处理函数中，对将接受到的客户端数据，原样返回给客户端，当接收到数据位"end"时候，关闭该客户端的网络连接。
服务端，一旦运行，将一直监听，除非手动关闭。


	在pthread_client.c中遵循一般的客户端的socket建立步奏：
　　1、创建一个socket，用函数socket()； 
　　2、设置socket属性，用函数setsockopt();* 可选 
　　3、绑定IP地址、端口等信息到socket上，用函数bind();这里没有特殊的设置
　　4、设置要连接的对方的IP地址和端口等属性； 
　　5、连接服务器，用函数connect()； 
　　6、收发数据，用函数send()和recv()，或者read()和write(); 
　　7、关闭网络连接；
	这里客户端为单线程的，可以通过运行多个客户端程序，来同时连接到socket的服务器端
