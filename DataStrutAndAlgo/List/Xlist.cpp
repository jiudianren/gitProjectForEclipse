/*
 * Xlist.cpp
 *
 *  Created on: 2018年10月22日
 *      Author: Administrator
 */


/*判断两个链表是否相交
 *
 *
 * 方法三
因为我们从上图得知，相交之后部分的长度是相等的，所以我们让长链表的长度减去短链表的长度，得到相差的长度，之后让长链表从头结点开始走过这个长度，与短链表同时向后走，若指针相等，则链表相交；若走到NULL，则链表不相交。
代码：

 *
 *
 *
 * 方法四
首先保存第二条链表的第一个节点，然后第二个链表整个接到第一个链表的后面，从第二个链表的第一个节点往后遍历，如果能再走到第二条链表的第一个节点位置，说明第二条链表的后部分节点与第一条链表共用，这样才会是后移的指针重新指向第二条链表的第一个节点。
此方法会破坏原有的链表的结构，所以这里我不提供代码，感兴趣可以自行尝试。


方法五
首先保存第二条链表的第一个节点，然后把第二条链表首尾链接形成一个大环，从第一条链表开始走，如果指针能够指向到第二条链表的第一个节点，说明链表相交。


*/

//https://blog.csdn.net/dawn_after_dark/article/details/73864643
